from typing import Final

import discord


"""
General bot settings.

DESCRIPTION: str
    Short description which will appear in help command.
DATABASE_DSN: str
    Connection url in format: "dialect+driver://username:password@host:port/database"
    Not all parameters needed, for example sqlite does not support users/passwords and is file based
    so example for it would be: "sqlite://some_name.some_extension"
DEFAULT_PREFIX: str
    Default prefix to use in guilds that did not define a custom one.
BOT_OWNERS: Dict[str, int]
    Warning! These users can bypass all command checks and cool-downs.
BOT_PERMISSIONS: discord.Permissions
    Permission the bot will ask in invite that was generated by invite command.
"""
DESCRIPTION: Final = "Licensy bot - easily manage expiration of roles with subscriptions!"
DATABASE_DSN: Final = "sqlite://db.sqlite"
DEFAULT_PREFIX: Final = "."  # TODO temporal for development phase
BOT_OWNERS: Final = {"BrainDead": 197918569894379520}
BOT_PERMISSIONS: Final = discord.Permissions().update(
    send_messages=True,  # Required. For sending info/success/error etc messages in chat.
    read_messages=True,  # Required. For the bot to be able to react to commands.
    manage_roles=True  # Required. For the bot to be actually able to manage roles (give/take).
)

"""
URL constants section.
"""
PATREON_LINK: Final = "https://www.patreon.com/Licensy"
PAYPAL_LINK: Final = "https://www.paypal.me/wizardofcro"
SUPPORT_CHANNEL_INVITE: Final = "https://discord.gg/trCYUkz"
TOP_GG_VOTE_LINK: Final = "https://top.gg/bot/604057722878689324"
SOURCE_CODE_LINK: Final = "https://github.com/albertopoljak/Licensy"
FAQ_LINK: Final = "https://github.com/albertopoljak/Licensy/wiki/FAQ"
QUICKSTART_LINK: Final = "https://github.com/albertopoljak/Licensy#quickstart-bot-usage"


"""
Channels used by bot to give certain info to developers.

LOG_CHANNEL_ID : int
    Channel to send information such as bot joining/leaving guilds.
ERROR_CHANNEL_ID: int
    Used for sending information about all bot errors.
UPDATE_CHANNEL_ID : int
    Channel to send updates made by update command.
SUGGESTIONS_CHANNEL_ID : int
    Used to send suggestions made by the suggest command.
"""
LOG_CHANNEL_ID: Final = 716792061302407260
ERROR_CHANNEL_ID: Final = 613847243266719755
UPDATE_CHANNEL_ID: Final = 625404542535598090
SUGGESTIONS_CHANNEL_ID: Final = 621366699316215828


"""
Constants used to differentiate normal from premium guilds.

NOTE!
If you're changing these after you already have a database up and running note that
you might lock your users from using the commands. For example if your previous
NORMAL_UNUSED_LICENSE_COUNT was 1000 and there is a guild that already hit this limit
but you decrease it here to 500 then that guild will not be able to create new licenses
until it deletes 501 of them. Increasing counts is safe though.

NORMAL_CHECK, PREMIUM_CHECK: int, int
    Each how many minutes to check for license expiration. Only put ints and don't put < 1
NORMAL_PACKET_ROLES_COUNT, PREMIUM_PACKET_ROLES_COUNT: int, int
    Maximum number of roles in role packet.
NORMAL_PACKET_COUNT, PREMIUM_PACKET_COUNT: int, int
    Maximum number of role packets in guild.
NORMAL_ACTIVE_LICENSE_COUNT, PREMIUM_ACTIVE_LICENSE_COUNT: int, int
    Maximum number of active licenses in guild.
NORMAL_UNUSED_LICENSE_COUNT, PREMIUM_UNUSED_LICENSE_COUNT: int, int
    Maximum number of stored, unactivated licenses in guild.
NORMAL_MAX_LICENSE_DURATION, PREMIUM_MAX_LICENSE_DURATION: int, int
    Maximum duration, in minutes, for each license.
"""
NORMAL_CHECK: Final = 60
PREMIUM_CHECK: Final = 1

NORMAL_PACKET_ROLES_COUNT: Final = 5
PREMIUM_PACKET_ROLES_COUNT: Final = 20

NORMAL_PACKET_COUNT: Final = 10
PREMIUM_PACKET_COUNT: Final = 100

NORMAL_ACTIVE_LICENSE_COUNT = 1_000
PREMIUM_ACTIVE_LICENSE_COUNT = 100_000

NORMAL_UNUSED_LICENSE_COUNT: Final = 1_000
PREMIUM_UNUSED_LICENSE_COUNT: Final = 10_000

_minutes_in_year = 366 * 24 * 60
NORMAL_MAX_LICENSE_DURATION: Final = _minutes_in_year
PREMIUM_MAX_LICENSE_DURATION: Final = _minutes_in_year * 3
